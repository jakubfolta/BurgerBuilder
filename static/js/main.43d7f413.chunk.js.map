{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/Burger/BuildControls/BuildControls.module.css","containers/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/original.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Burger/Burger.module.css","containers/Checkout/ContactData/ContactData.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","components/Order/Order.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Button/Button.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Spinner/Spinner.js","axios-orders.js","components/UI/Input/Input.js","components/UI/Modal/Modal.js","containers/withErrorHandler/withErrorHandler.js","containers/Checkout/ContactData/ContactData.js","store/actions/order.js","store/actions/actionTypes.js","containers/Checkout/Checkout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/order.js","store/reducers/burgerBuilder.js","index.js"],"names":["module","exports","Logo","className","classes","src","burgerLogo","alt","NavigationItem","props","to","link","activeClassName","active","exact","children","NavigationItems","List","DrawerToggle","Toggle","DesktopOnly","join","onClick","clicked","Toggle__button","Toolbar","open","Backdrop","show","hide","SideDrawer","attachedClasses","Layout","state","showSideDrawer","sideDrawerCloseHandler","setState","sideDrawerOpenHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","ing","Array","_","i","key","reduce","acc","el","concat","length","Button","btnType","disabled","CheckoutSummary","Checkout","style","width","margin","checkoutCancelled","checkoutContinued","Spinner","Loader","instance","axios","create","baseURL","Input","inputElement","inputClasses","InputElement","validationError","touched","validity","shouldValidate","push","NotValid","elementType","onChange","change","elementConfig","value","options","o","displayValue","Label","label","Modal","nextProps","nextState","console","log","transform","opacity","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","ContactData","orderForm","name","placeholder","validation","required","minLength","street","zipCode","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","e","preventDefault","contactForm","order","totalPrice","orderData","onOrderHandler","checkValidity","rules","isValid","trim","onChangeHandler","id","updatedOrderForm","updatedFormElement","target","validForm","formElementArray","config","contactData","loading","onSubmit","connect","bur","ord","dispatch","post","then","orderId","data","catch","purchaseBurgerFail","orderActions","continueHandler","history","replace","cancelHandler","goBack","checkoutSummary","purchasedRedirect","purchased","path","match","component","BuildControl","Less","remove","More","add","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","updatePurchaseState","purchaseCancelHandler","purchaseContinueHandler","onPurchaseInit","pathname","onInitIngredients","orderSummary","burger","onAddIngredientHandler","onRemoveIngredientHandler","ingType","ingredientName","burgerBuilderActions","get","initIngredients","Order","amount","ingredientOutput","display","padding","border","orders","fetchedOrders","err","App","Orders","Boolean","window","location","hostname","updateObject","oldObject","updatedValues","initialState","reducer","action","newOrder","INGREDIENT_PRICES","salad","cheese","meat","bacon","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","orderReducer","burgerBuilderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43d7f413.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__G8mGn\",\"BreadTop\":\"BurgerIngredient_BreadTop__2F7pz\",\"Seeds1\":\"BurgerIngredient_Seeds1__9tY7P\",\"Seeds2\":\"BurgerIngredient_Seeds2__3a0gg\",\"Meat\":\"BurgerIngredient_Meat__3T5vG\",\"Cheese\":\"BurgerIngredient_Cheese__2A8xs\",\"Salad\":\"BurgerIngredient_Salad__vA3Jy\",\"Bacon\":\"BurgerIngredient_Bacon__2w9wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2d-IH\",\"Label\":\"Input_Label__z_pAC\",\"InputElement\":\"Input_InputElement__1kooS\",\"NotValid\":\"Input_NotValid__V3ZqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__H95os\",\"Label\":\"BuildControl_Label__ky5q3\",\"Less\":\"BuildControl_Less__1xFU1\",\"More\":\"BuildControl_More__1Ygxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__15VLn\",\"Tollbar\":\"Toolbar_Tollbar__2pWAd\",\"Logo\":\"Toolbar_Logo__2BSFT\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3n8Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggle\":\"DrawerToggle_Toggle__3QQ-h\",\"Toggle__button\":\"DrawerToggle_Toggle__button__Q2-oK\",\"DesktopOnly\":\"DrawerToggle_DesktopOnly__3Wkay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__37XN2\",\"Open\":\"SideDrawer_Open__2PV5y\",\"Close\":\"SideDrawer_Close__3eo68\",\"Logo\":\"SideDrawer_Logo__12Fhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1pLBD\",\"active\":\"NavigationItem_active__3vO1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1e8UX\",\"Success\":\"Button_Success__IhNjE\",\"Danger\":\"Button_Danger__1ZP3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2VjGV\",\"OrderButton\":\"BuildControls_OrderButton__2Ji6g\",\"enable\":\"BuildControls_enable__N9NwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__L9IYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__YOwDF\"};","module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"NavigationItems_List__GBbtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1BgZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"CheckoutSummary_Checkout__3sGyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1QNB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__FFTxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__35E-P\",\"load3\":\"Spinner_load3__3Xhmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__kD0em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Z1Ud\"};","import React from 'react';\r\n\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/original.png';\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"logo\"/>\r\n  </div>\r\n)\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NavigationItem = props => (\r\n  <li className={classes.NavigationItem} >\r\n    <NavLink\r\n      to={props.link}\r\n      activeClassName={classes.active} exact={props.exact}>{props.children}</NavLink>\r\n  </li>\r\n);\r\n\r\nNavigationItem.propTypes = {\r\n  link: PropTypes.string.isRequired\r\n}\r\n\r\nexport default NavigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = () => (\r\n  <ul className={classes.List}>\r\n    <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n    <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n  </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DrawerToggle = props => (\r\n  <div\r\n    className={[classes.Toggle, classes.DesktopOnly].join(' ')}\r\n    onClick={props.clicked} >\r\n    <span className={classes.Toggle__button} />\r\n  </div>\r\n)\r\n\r\nDrawerToggle.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Toolbar = props => (\r\n  <header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.open} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      <NavigationItems />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nToolbar.propTypes = {\r\n  open: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Backdrop = props => (\r\n  props.show ? <div className={classes.Backdrop} onClick={props.hide}></div> : null\r\n);\r\n\r\nBackdrop.propTypes = {\r\n  show: PropTypes.bool,\r\n  hide: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Backdrop;","import React, { Fragment } from 'react';\r\n\r\nimport classes from './SideDrawer.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SideDrawer = props => {\r\n  const attachedClasses = props.open ? \"Open\" : \"Close\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <Backdrop\r\n        show={props.open}\r\n        hide={props.hide} />\r\n      <div className={[classes.SideDrawer, classes[attachedClasses]].join(' ')}>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nSideDrawer.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  hide: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SideDrawer;","import React, { Component, Fragment } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false\r\n  }\r\n\r\n  sideDrawerCloseHandler = () => {\r\n    this.setState({showSideDrawer: false})\r\n  }\r\n\r\n  sideDrawerOpenHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {showSideDrawer: !prevState.showSideDrawer};\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Toolbar open={this.sideDrawerOpenHandler}/>\r\n        <SideDrawer\r\n          hide={this.sideDrawerCloseHandler}\r\n          open={this.state.showSideDrawer} />\r\n        <main className={classes.Content}>\r\n          {this.props.children}\r\n        </main>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case ('bread-bottom'):\r\n      ingredient = <div className={classes.BreadBottom}></div>;\r\n      break;\r\n      case ('bread-top'):\r\n      ingredient = (\r\n        <div className={classes.BreadTop}>\r\n          <div className={classes.Seeds1}></div>\r\n          <div className={classes.Seeds2}></div>\r\n        </div>\r\n      );\r\n      break;\r\n      case ('meat'):\r\n      ingredient = <div className={classes.Meat}></div>;\r\n      break;\r\n      case ('cheese'):\r\n      ingredient = <div className={classes.Cheese}></div>;\r\n      break;\r\n      case ('salad'):\r\n      ingredient = <div className={classes.Salad}></div>;\r\n      break;\r\n      case ('bacon'):\r\n      ingredient = <div className={classes.Bacon}></div>;\r\n      break;\r\n      default:\r\n      ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Burger = props => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(ing => {\r\n      return [...Array(props.ingredients[ing])].map((_, i) => {\r\n        return <BurgerIngredient key={ing + i} type={ing} />\r\n      })\r\n    })\r\n    .reduce((acc, el) => {\r\n      return acc.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please add some ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nBurger.propTypes = {\r\n  ingredients: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = props => (\r\n  <button\r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}\r\n    disabled={props.disabled} >{props.children}</button>\r\n);\r\n\r\nButton.propTypes = {\r\n  btnType: PropTypes.string.isRequired,\r\n  clicked: PropTypes.func\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport classes from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = props => {\r\n  return (\r\n    <div className={classes.Checkout}>\r\n      <h1>We hope it tastes well!!!</h1>\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients}/>\r\n      </div>\r\n      <Button\r\n        btnType='Danger'\r\n        clicked={props.checkoutCancelled}>Cancel</Button>\r\n      <Button\r\n        btnType='Success'\r\n        clicked={props.checkoutContinued}>Continue</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n  <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\n\r\nexport default Spinner;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://react-my-burger-8a5e2.firebaseio.com/',\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  const validationError = (props.touched && !props.validity) ? <p>Please enter a valid value!</p> : null;\r\n\r\n  if (!props.validity && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.NotValid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case ('input'):\r\n      inputElement = <input\r\n        onChange={props.change}\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value} />;\r\n      break;\r\n    case ('textarea'):\r\n      inputElement = <textarea\r\n        onChange={props.change}\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value} />;\r\n      break;\r\n    case ('select'):\r\n      inputElement = (\r\n        <select\r\n          onChange={props.change}\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}>\r\n          {props.elementConfig.options.map(o => (\r\n            <option\r\n              key={o.value}\r\n              value={o.value}>\r\n              {o.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>);\r\n      break;\r\n    default:\r\n      inputElement = <input\r\n        onChange={props.change}\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;","import React, {Fragment, Component} from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('[Modal] will update');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Backdrop\r\n          show={this.props.show}\r\n          hide={this.props.hide} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)', opacity: this.props.show ? 1 : 0 }} >\r\n          {this.props.children}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  hide: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Modal;","import React, { Component, Fragment } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(req => {\r\n        this.setState({error: null});\r\n        return req;\r\n      });\r\n\r\n      this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n        this.setState({error: error});\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({error: null});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            show={this.state.error}\r\n            hide={this.errorConfirmedHandler} >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './ContactData.module.css';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as orderActions from '../../../store/actions/index';\r\nimport withErrorHandler from '../../withErrorHandler/withErrorHandler';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 3\r\n        },\r\n        validity: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 3\r\n        },\r\n        validity: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'ZIP'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5\r\n        },\r\n        validity: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 3\r\n        },\r\n        validity: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        validity: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            {value: 'fastest', displayValue: 'Fastest'},\r\n            {value: 'cheapest', displayValue: 'Cheapest'}\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        validity: true\r\n      },\r\n    },\r\n    formIsValid: false\r\n  }\r\n\r\n  orderHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contactForm = {};\r\n    for (let el in this.state.orderForm) {\r\n      contactForm[el] = this.state.orderForm[el].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      totalPrice: this.props.totalPrice,\r\n      orderData: contactForm\r\n    };\r\n    this.props.onOrderHandler(order);\r\n  }\r\n\r\n  checkValidity = (value, rules) => {\r\n    let isValid = false;\r\n\r\n    if (!rules) {\r\n      return true // for \"deliveryMethod\" state object\r\n    }\r\n\r\n    if (rules.required) {\r\n      isValid = value.trim() !== '';\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.trim().length >= rules.minLength;\r\n    }\r\n\r\n    if (rules.minLength && rules.maxLength) {\r\n      isValid =  (value.trim().length >= rules.minLength) && (value.trim().length <= rules.maxLength);\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler = (e, id) => {\r\n    const updatedOrderForm = {...this.state.orderForm};\r\n    const updatedFormElement = {...updatedOrderForm[id]};\r\n\r\n    updatedFormElement.value = e.target.value;\r\n    if (updatedFormElement.elementType !== 'select') {\r\n      updatedFormElement.validity = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n      updatedFormElement.touched = true;\r\n    }\r\n    updatedOrderForm[id] = updatedFormElement;\r\n\r\n    let validForm = true;\r\n    for (let id in updatedOrderForm) {\r\n        validForm = updatedOrderForm[id].validity && validForm;\r\n    }\r\n\r\n    this.setState({orderForm: updatedOrderForm, formIsValid: validForm})\r\n  }\r\n\r\n  render() {\r\n    const formElementArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      })\r\n    }\r\n\r\n    let contactData = this.props.loading ? <Spinner /> :\r\n      (\r\n        <form onSubmit={this.orderHandler}>\r\n          {formElementArray.map(i => <Input\r\n            key={i.id}\r\n            change={(e) => this.onChangeHandler(e, i.id)}\r\n            label={i.config.elementConfig.placeholder}\r\n            elementType={i.config.elementType}\r\n            elementConfig={i.config.elementConfig}\r\n            value={i.config.value}\r\n            validity={i.config.validity}\r\n            shouldValidate={i.config.validation}\r\n            touched={i.config.touched} />)}\r\n\r\n          <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Place order</Button>\r\n        </form>\r\n      )\r\n\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h3>Enter your contact details.</h3>\r\n        {contactData}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.bur.ingredients,\r\n    totalPrice: state.bur.totalPrice,\r\n    loading: state.ord.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderHandler: (id, order) => dispatch(orderActions.sendOrder(id, order))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START\r\n  }\r\n}\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const sendOrder = (order) => {\r\n  return dispatch => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios.post('/orders.json', order)\r\n    .then(response => {\r\n      return dispatch(purchaseBurgerSuccess(response.data.name, order))\r\n    })\r\n    .catch(error => {\r\n      return dispatch(purchaseBurgerFail(error))\r\n    })\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT\r\n  }\r\n}","// Burger builder actions\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\n// Order actions\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n// REDUX IMPLEMENTED - NO NEED FOR LIFECYCLE HOOKS\r\n\r\n  // componentDidMount() {\r\n  //   const query = new URLSearchParams(this.props.location.search);\r\n  //   const queryIngredients = {};\r\n  //   let price = 0;\r\n  //\r\n  //   for (let param of query.entries()) {\r\n  //     if (param[0] === 'totalPrice') {\r\n  //       price = param[1];\r\n  //     } else {\r\n  //       queryIngredients[param[0]] = +param[1];\r\n  //     }\r\n  //   }\r\n  //   this.setState({ingredients: queryIngredients, price: price});\r\n  // }\r\n\r\n  continueHandler = () => {\r\n    this.props.history.replace('checkout/contact');\r\n  }\r\n\r\n  cancelHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  render() {\r\n    let checkoutSummary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null\r\n      checkoutSummary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutContinued={this.continueHandler}\r\n            checkoutCancelled={this.cancelHandler} />\r\n          <Route path={this.props.match.path + '/contact'} component={ContactData} />\r\n        </div>\r\n      )\r\n    }\r\n    return checkoutSummary\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.bur.ingredients,\r\n    purchased: state.ord.purchased\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl = props => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button\r\n      disabled={props.disabled}\r\n      className={classes.Less}\r\n      onClick={props.remove} >Less</button>\r\n    <button\r\n      className={classes.More}\r\n      onClick={props.add} >More</button>\r\n  </div>\r\n);\r\n\r\nexport default BuildControl;","import React, { Component } from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst controls = [\r\n  {label: 'Salad', type: 'salad'},\r\n  {label: 'Bacon', type: 'bacon'},\r\n  {label: 'Cheese', type: 'cheese'},\r\n  {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nclass BuildControls extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.BuildControls}>\r\n      <h3>Current price: <strong>{this.props.price.toFixed(2)}</strong></h3>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          add={() => this.props.ingredientAdded(ctrl.type)}\r\n          remove={() => this.props.ingredientRemoved(ctrl.type)}\r\n          disabled={!this.props.ingredients[ctrl.type]} />\r\n        ))}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!this.props.purchasable}\r\n        onClick={this.props.order} >ORDER NOW</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBuildControls.propTypes = {\r\n  ingredientAdded: PropTypes.func.isRequired,\r\n  ingredientRemoved: PropTypes.func.isRequired,\r\n  purchasable: PropTypes.bool.isRequired,\r\n  order: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BuildControls;","import React, { Fragment, Component } from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass OrderSummary extends Component {\r\n  // This could be a functional component, doesn't have to be a class\r\n  componentDidUpdate() {\r\n    console.log('[OrderSummary] will update');\r\n  }\r\n  render() {\r\n    const ingredientSummary = Object.keys(this.props.ingredients)\r\n    .map(el => {\r\n      return (\r\n        <li key={el}>\r\n          <span style={{textTransform: 'capitalize'}}>{el}</span>: {this.props.ingredients[el]}\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Fragment>\r\n        <h3>Your order</h3>\r\n        <p>A delicious burger with following ingredients:</p>\r\n        <ul>\r\n          {ingredientSummary}\r\n        </ul>\r\n        <p><strong>Price: {(this.props.price).toFixed(2)}</strong></p>\r\n        <p>Continue to checkout?</p>\r\n        <Button\r\n          btnType=\"Danger\"\r\n          clicked={this.props.purchaseCancelled} >Cancel</Button>\r\n        <Button\r\n          btnType=\"Success\"\r\n          clicked={this.props.purchaseContinued} >Continue</Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOrderSummary.propTypes = {\r\n  purchaseCancelled: PropTypes.func.isRequired,\r\n  purchaseContinued: PropTypes.func.isRequired\r\n};\r\n\r\nexport default OrderSummary;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\nimport * as orderActions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    order: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  orderHandler = () => {\r\n    this.setState({order: true})\r\n  };\r\n\r\n  updatePurchaseState = (ingredients) => {\r\n    const sum = Object.keys(ingredients)\r\n      .map(el => ingredients[el])\r\n      .reduce((acc, el) => {\r\n        return acc + el;\r\n      }, 0);\r\n    return sum > 0;\r\n  };\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({order: false});\r\n  };\r\n\r\n// REDUX IMPLEMENTED - NO NEED TO PASS QUERY PARAMS\r\n\r\n  purchaseContinueHandler = () => {\r\n    // const queryParams = [];\r\n    //\r\n    // for (let i in this.state.ingredients) {\r\n    //   queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n    // }\r\n    // queryParams.push('totalPrice=' + encodeURIComponent(this.state.totalPrice));\r\n    this.props.onPurchaseInit();\r\n    this.props.history.push({\r\n      pathname: '/checkout',\r\n      // search: '?' + queryParams.join('&')\r\n    })\r\n  };\r\n\r\n  render() {\r\n    let orderSummary = null;\r\n    let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <Fragment>\r\n          <Burger ingredients={this.props.ingredients} />\r\n          <BuildControls\r\n            ingredientAdded={this.props.onAddIngredientHandler}\r\n            ingredientRemoved={this.props.onRemoveIngredientHandler}\r\n            ingredients={this.props.ingredients}\r\n            price={this.props.totalPrice}\r\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\r\n            order={this.orderHandler}/>\r\n        </Fragment>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ingredients}\r\n          price={this.props.totalPrice}\r\n          purchaseCancelled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler} />\r\n      )\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          show={this.state.order}\r\n          hide={this.purchaseCancelHandler} >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.bur.ingredients,\r\n    totalPrice: state.bur.totalPrice,\r\n    error: state.bur.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddIngredientHandler: (ingType) => dispatch(burgerBuilderActions.addIngredient(ingType)),\r\n    onRemoveIngredientHandler: (ingType) => dispatch(burgerBuilderActions.removeIngredient(ingType)),\r\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n    onPurchaseInit: () => dispatch(orderActions.purchaseInit())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (ingType) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: ingType\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (ingType) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: ingType\r\n  };\r\n};\r\n\r\nexport const setIngredients = (ing) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    initIngredients: ing\r\n  };\r\n};\r\n\r\nexport const setError = () => {\r\n  return {\r\n    type: actionTypes.SET_ERROR\r\n  }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n  return dispatch => {\r\n    axios.get('/ingredients.json')\r\n      .then(res => {\r\n        return dispatch(setIngredients(res.data));\r\n      })\r\n      .catch(error => {\r\n        return dispatch(setError())\r\n      })\r\n  }\r\n}","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = props => {\r\n  // const ingredients = Object.keys(props.ingredients)\r\n  //   .map(i => {\r\n  //     return i + ` (${props.ingredients[i]})`;\r\n  //   })\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(i => {\r\n    return <span\r\n      style={{\r\n        textTransform: 'capitalize',\r\n        display: 'inline-block',\r\n        margin: '0 8px',\r\n        padding: '5px',\r\n        border: '1px solid #ccc'\r\n      }}\r\n      key={i.name}>{i.name} ({i.amount})</span>;\r\n  })\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      {/* <p>Ingredients: {ingredients.join(' ')}</p> */}\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>Price: <strong>USD {(+props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    loading: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('orders.json')\r\n      .then(res => {\r\n        const fetchedOrders = []\r\n        for (let order in res.data) {\r\n          fetchedOrders.push({\r\n            ...res.data[order],\r\n            id: order\r\n          })\r\n        }\r\n        this.setState({orders: fetchedOrders, loading: false})\r\n      })\r\n      .catch(err => {\r\n        this.setState({loading: false})\r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n    let orders = this.state.orders.map((order) =>\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={order.totalPrice} />)\r\n    orders = this.state.loading ? <Spinner/> : orders;\r\n\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component }  from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          <Layout>\n            <Switch>\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/\" component={BurgerBuilder} />\n            </Switch>\n          </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedValues) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedValues\r\n  }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return updateObject(state, {loading: true})\r\n\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId\r\n      };\r\n      // newOrder['id'] = action.orderId; // possible option\r\n      return updateObject(state, {\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder),\r\n        purchased: true\r\n      })\r\n\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return updateObject(state, {loading: false})\r\n\r\n    case actionTypes.PURCHASE_INIT:\r\n      return updateObject(state, {purchased: false})\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './../actions/actionTypes';\r\nimport { updateObject } from './../utility';\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return updateObject(state, {ingredients: {\r\n        ...state.ingredients,\r\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n      },\r\n      totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]})\r\n\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return updateObject(state, {ingredients: {\r\n        ...state.ingredients,\r\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n    },\r\n      totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]})\r\n\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return updateObject(state, {ingredients: action.initIngredients, totalPrice: 4, error: false})\r\n\r\n    case actionTypes.SET_ERROR:\r\n      return updateObject(state, {error: true})\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport orderReducer from './store/reducers/order';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  ord: orderReducer,\n  bur: burgerBuilderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}